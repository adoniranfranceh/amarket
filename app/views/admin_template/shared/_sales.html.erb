<div class="float-end"><%= link_to 'Registrar nova venda', new_admin_template_sale_path, class: 'btn btn-success refresh-link' %></div>
<div>
  <table class="table table-bordered daaTable dtr-inline">
    <thead>
      <tr>
        <th class="col-1">Id</th>
        <th class="col-1">Data</th>
        <th class="col-1">Vendedor</th>
        <th class="col-1">Cliente</th>
        <th class="col-1">Ações</th>
      </tr>
    </thead>

    <tbody>
      <% @sales.each do |sale| %>   
      <tr>
        <td class="row" style="padding-bottom: 37px;"><%= sale.id %></td>
        <td><%= sale.created_at.strftime('%d/%m/%Y') %></td>
        <td><%= sale.admin.full_name_admin %></td>
        <td><%= sale.customer.name %></td>
        <td>
          <%= sale.status %>
          <%= pdf_and_devolution_btns(sale) %>
          <%= cancel_btn(sale) %>
          <%= select_status(sale) %>
          <% modal_id = "statusModal#{sale.id}" %>
          <%= render 'admin_template/shared/status_select_modal', sale: sale, modal_id: modal_id %>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>
</div>
<%= javascript_tag do %>
  document.addEventListener("DOMContentLoaded", function() {
    const adminActionLinks = document.querySelectorAll(".admin-action-link");

    adminActionLinks.forEach(link => {
      link.addEventListener("click", function(event) {
        event.preventDefault();

        const saleId = event.currentTarget.getAttribute("data-sale-id");
        const status = event.currentTarget.getAttribute("data-status");

        const csrfToken = document.querySelector("meta[name='csrf-token']").getAttribute("content");

        Swal.fire({
          title: 'Digite a senha',
          input: 'password',
          inputValue: '',
          inputAttributes: {
            autocapitalize: 'off'
          },
          inputAttributes: {
            autocapitalize: 'off',
          },
          showCancelButton: true,
          confirmButtonText: 'Confirmar',
          cancelButtonText: 'Cancelar',
          preConfirm: (password) => {
            return new Promise((resolve) => {
              $.ajax({
                method: 'POST',
                url: '/validate_admin_password',
                data: { password: password },
                success: function(response) {
                  if (response.valid) {
                    resolve();
                  } else {
                    Swal.showValidationMessage('Senha incorreta');
                    const confirmButton = Swal.getConfirmButton();
                    const cancelButton = Swal.getCancelButton();
                    confirmButton.disabled = false;
                    cancelButton.disabled = false;
                  }
                }
              });
            });
          }
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajaxSetup({
              headers: {
                'X-CSRF-Token': csrfToken
              }
            });

            $.ajax({
              method: 'PUT',
              url: `/admin_template/sales/${saleId}/update_status?new_status=${status}`
            });
          }
        });
      });
    });
  });
<% end %>
